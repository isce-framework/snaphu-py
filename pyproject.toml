[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"

[project]
name = "snaphu"
authors = [
  { name = "Geoffrey Gunter", email = "geoffrey.m.gunter@jpl.nasa.gov" },
]
description = "A simple Python wrapper for SNAPHU"
readme = "README.md"
keywords = [
  "insar",
  "phase-unwrapping",
  "radar",
  "remote-sensing",
  "sar",
  "synthetic-aperture-radar",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: Free for non-commercial use",
  "License :: OSI Approved :: Apache Software License",
  "License :: OSI Approved :: BSD License",
  "License :: Other/Proprietary License",
  "Operating System :: MacOS",
  "Operating System :: POSIX :: Linux",
  "Operating System :: Unix",
  "Programming Language :: Python",
  "Topic :: Scientific/Engineering",
]
requires-python = ">=3.9"
dependencies = ["numpy>=1.20"]
dynamic = ["version"]

[project.optional-dependencies]
raster = ["rasterio>=1.2"]
test = ["pytest>=6", "pytest-cov>=3"]

[project.urls]
Discussions = "https://github.com/isce-framework/snaphu-py/discussions"
Homepage = "https://github.com/isce-framework/snaphu-py"
Issues = "https://github.com/isce-framework/snaphu-py/issues"

[tool.black]
preview = true

[tool.mypy]
strict = true

[[tool.mypy.overrides]]
module = "test.*"
disable_error_code = ["misc", "no-untyped-def"]

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "--showlocals",
  "--strict-markers",
  "--strict-config",
  "--cov=snaphu",
]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = ["test"]

[tool.ruff]
select = [
  "A",   # flake8-builtins
  "ARG", # flake8-unused-arguments
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "D",   # pydocstyle
  "E",   # pycodestyle (errors)
  "W",   # pycodestyle (warnings)
  "EM",  # flake8-errmsg
  "EXE", # flake8-executable
  "F",   # Pyflakes
  "FBT", # flake8-boolean-trap
  "I",   # isort
  "ISC", # flake8-implicit-str-concat
  "N",   # pep8-naming
  "PGH", # pygrep-hooks
  "PIE", # flake8-pie
  "PL",  # Pylint
  "PT",  # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "RET", # flake8-return
  "RUF", # Ruff-specific rules
  "SIM", # flake8-simplify
  "SLF", # flake8-self
  "TRY", # tryceratops
  "UP",  # pyupgrade
  "YTT", # flake8-2020
]
ignore = [
  "D100", # Missing docstring in public module
  "D104", # Missing docstring in public package
  "D105", # Missing docstring in magic method
  "D203", # 1 blank line required before class docstring
  "D212", # Multi-line docstring summary should start at the first line
  "PLR",  # Pylint Refactor
]

[tool.ruff.per-file-ignores]
"**/__init__.py" = ["F401"]
"test/**" = ["D"]

[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.isort]
known-first-party = ["snaphu"]

[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
sdist.include = ["src/snaphu/_version.py"]
wheel.license-files = ["LICENSE-*", "ext/snaphu/README"]

[tool.setuptools_scm]
write_to = "src/snaphu/_version.py"
local_scheme = "no-local-version"
